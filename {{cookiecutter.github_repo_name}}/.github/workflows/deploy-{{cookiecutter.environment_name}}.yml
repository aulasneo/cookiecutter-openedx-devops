#------------------------------------------------------------------------------
# written by: mcdaniel
# date: june-2022
#
# usage: top-level workflow. Initiated manually from Github Actions console page
#        Deploys a Tutor-created openedx Docker image to the Kubernetes cluster.
#------------------------------------------------------------------------------
name: Deploy {{ cookiecutter.global_platform_name }} {{ cookiecutter.environment_name }}

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # common settings
      # --------------------------------------------
      DEBUG_MODE: false
      AWS_REGION: {{ cookiecutter.global_aws_region }}

      # environment settings
      # --------------------------------------------
      ENVIRONMENT_ID: {{ cookiecutter.environment_name }}
      NAMESPACE: {{ cookiecutter.global_platform_name }}-{{ cookiecutter.global_platform_region }}-{{ cookiecutter.environment_name }}
      EKS_CLUSTER_NAME: {{ cookiecutter.global_platform_name }}-{{ cookiecutter.global_platform_region }}-{{ cookiecutter.global_platform_shared_resource_identifier }}
      S3_BUCKET_PREFIX: {{ cookiecutter.global_platform_name }}-{{ cookiecutter.global_platform_region }}-{{ cookiecutter.environment_name }}
      OPENEDX_RELEASE_BRANCH: open-release/{{ cookiecutter.ci_openedx_release_branch }}
      OPENEDX_RELEASE_TAG: open-release/{{ cookiecutter.ci_openedx_release_tag }}
      OPENEDX_RELEASE_VERSION: {{ cookiecutter.ci_openedx_release_version }}

      # feature flags for optional tutor modules
      # --------------------------------------------
      ENABLE_S3: true
      {% if cookiecutter.ci_deploy_install_discovery_service == "Y" %}
      ENABLE_DISCOVERY: true
      {% else -%}
      ENABLE_DISCOVERY: false
      {% endif -%}
      {% if cookiecutter.environment_add_aws_ses == "Y" %}
      ENABLE_SMTP: true
      {% else -%}
      ENABLE_SMTP: false
      {% endif -%}
      ENABLE_BACKUP: false
      {% if cookiecutter.ci_deploy_install_credentials_server == "Y" -%}
      ENABLE_CREDENTIALS: true
      {% else -%}
      ENABLE_CREDENTIALS: false
      {% endif -%}
      {% if cookiecutter.ci_deploy_install_ecommerce_service == "Y" %}
      ENABLE_ECOMMERCE: true
      {% else -%}
      ENABLE_ECOMMERCE: false
      {% endif -%}
      {% if cookiecutter.ci_deploy_install_forum_service == "Y" %}
      ENABLE_FORUM: true
      {% else -%}
      ENABLE_FORUM: false
      {% endif -%}
      {% if cookiecutter.ci_deploy_install_notes_service == "Y" -%}
      ENABLE_NOTES: true
      {% else -%}
      ENABLE_NOTES: false
      {% endif -%}
      {% if cookiecutter.ci_deploy_install_xqueue_service == "Y" -%}
      ENABLE_XQUEUE: true
      {% else -%}
      ENABLE_XQUEUE: false
      {% endif -%}
      {% if cookiecutter.ci_deploy_install_license_manager_service == "Y" -%}
      ENABLE_LICENSE_MANAGER: true
      {% else %}
      ENABLE_LICENSE_MANAGER: false
      {% endif %}

    # deployment workflow begins here
    # --------------------------------------------
    steps:
      # checkout github repos: this repo, plus, all Gihubs Actions repos in this workflow
      - name: Checkout
        uses: actions/checkout@{{ cookiecutter.ci_actions_checkout_version }}

      # AWS helper method. creates a session token that's usable by all other
      # aws-actions. Prevents us from having to explicitly provide authentication credentials
      # to each aws-actions method individually.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@{{ cookiecutter.ci_actions_configure_aws_credentials_version }}
        with:
          aws-access-key-id: {% raw %}${{ secrets.AWS_ACCESS_KEY_ID }}{% endraw %}
          aws-secret-access-key: {% raw %}${{ secrets.AWS_SECRET_ACCESS_KEY }}{% endraw %}
          aws-region: {% raw %}${{ env.AWS_REGION }}{% endraw %}

      # Open edX Github Actions init procedure. Provides reliable initializations of
      # kubectl, aws-cli and tutor
      - name: Initialize environment
        uses: openedx-actions/tutor-k8s-init@{{ cookiecutter.ci_openedx_actions_tutor_k8s_init_version }}
        with:
          eks-namespace: {% raw %}${{ env.NAMESPACE }}{% endraw %}
          eks-cluster-name: {% raw %}${{ env.EKS_CLUSTER_NAME }}{% endraw %}
          aws-region: {% raw %}${{ env.AWS_REGION }}{% endraw %}
          tutor-version: "{{ cookiecutter.ci_build_tutor_version }}"
          tutor-mfe-version: "{{ cookiecutter.ci_build_tutor_mfe_version }}"
          kubectl-version: "{{ cookiecutter.ci_build_kubectl_version }}"

      # Setup a connection to our AWS Elastic Container Registry so that we can pull
      # containers that we created with the build workflows in this Cookiecutter.
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@{{ cookiecutter.ci_actions_amazon_ecr_login_version }}

      # ---------------------------------------------------------------------------------
      # initialize workflow environment variables
      # ---------------------------------------------------------------------------------
      - name: Intialize AWS_ECR_URI
        shell: bash
        run: |-
          echo "AWS_ECR_URI={% raw %}${{ steps.login-ecr.outputs.registry }}{% endraw %}" >> $GITHUB_ENV

      - name: Intialize AWS ECR repo URIs
        shell: bash
        run: |-
          echo "AWS_ECR_REPOSITORY_BACKUP=${AWS_ECR_URI}/openedx_backup:latest" >> $GITHUB_ENV
          echo "AWS_ECR_REPOSITORY_CREDENTIALS=${AWS_ECR_URI}/openedx_credentials:latest" >> $GITHUB_ENV
          echo "AWS_ECR_REPOSITORY_LICENSE_MANAGER=${AWS_ECR_URI}/license_manager:latest" >> $GITHUB_ENV
          echo "AWS_ECR_REPOSITORY_OPENEDX=${AWS_ECR_URI}/openedx-{% raw %}${{ env.OPENEDX_RELEASE_VERSION }}{% endraw %}:latest" >> $GITHUB_ENV

      - name: Load environment specific settings (direct)
        shell: bash
        run: |-
          # Pin the instalation ID with the Kubernetes namespace. It needs to be unique and static per instalation.
          cat ci/tutor-deploy/environments/{% raw %}${{ env.ENVIRONMENT_ID }}{% endraw %}/config.yml >> $GITHUB_ENV

      # note that values like $LMS_HOSTNAME come from this repo
      # in /ci/tutor-deploy/environments/staging/config.yml
      #
      - name: Set the Open edX runtime version and base domains
        shell: bash
        run: |-
          echo "TUTOR_LMS_HOST=$LMS_HOSTNAME" >> $GITHUB_ENV
          echo "TUTOR_CMS_HOST=$CMS_HOSTNAME" >> $GITHUB_ENV
          echo "TUTOR_DOCKER_IMAGE_OPENEDX=${AWS_ECR_REPOSITORY_OPENEDX}" >> $GITHUB_ENV

      # see: https://docs.tutor.overhang.io/configuration.html
      - name: Override backend service versions
        shell: bash
        run: |-
          echo "TUTOR_DOCKER_IMAGE_ELASTICSEARCH=docker.io/elasticsearch:7.17.9" >> $GITHUB_ENV

      #------------------------------------------------------------------------
      # un-comment this to pin your deployment to a specific open edx release.
      #
      # a word of caution: usually you're better off choosing a version of tutor
      # and then letting tutor make decisions of this nature.
      # see: https://discuss.openedx.org/t/how-to-move-through-tutor-versions-part-ii/9574
      #------------------------------------------------------------------------
      #- name: Set OPENEDX_COMMON_VERSION
      #  shell: bash
      #  run: |-
      #    echo "TUTOR_OPENEDX_COMMON_VERSION=open-release/{{ cookiecutter.ci_openedx_release_tag }}" >> $GITHUB_ENV

      # ---------------------------------------------------------------------------------
      # Configure optional tutor plugins
      # ---------------------------------------------------------------------------------
      - name: Enable tutor plugin - S3
        uses: openedx-actions/tutor-plugin-enable-s3@{{ cookiecutter.ci_openedx_actions_tutor_plugin_enable_s3_version }}
        if: {% raw %}${{ env.ENABLE_S3 == 'true' }}{% endraw %}
        with:
          namespace: {% raw %}${{ env.NAMESPACE }}{% endraw %}

      - name: Enable tutor plugin - Backup
        uses: openedx-actions/tutor-plugin-enable-backup@{{ cookiecutter.ci_openedx_actions_tutor_plugin_enable_backup_version }}
        if: {% raw %}${{ env.ENABLE_BACKUP == 'true' }}{% endraw %}
        with:
          aws-ecr-uri: ${AWS_ECR_REPOSITORY_BACKUPS}
          namespace: {% raw %}${{ env.NAMESPACE }}{% endraw %}

      # -----------------------------------------------------------------------
      # NOTE: the major version of tutor-discovery must be consistent with
      #       the version of tutor that is managing the overall installation.
      #       for example: if you've installed tutor v14.2.3 then you should
      #       install tutor-discovery v14.0.2
      #
      #       refer to https://pypi.org/project/tutor-discovery/#history
      #       for a list of available versions.
      # -----------------------------------------------------------------------
      - name: Enable tutor plugin - Discovery
        uses: openedx-actions/tutor-plugin-enable-discovery@{{ cookiecutter.ci_openedx_actions_tutor_plugin_enable_discovery_version }}
        if: {% raw %}${{ env.ENABLE_DISCOVERY == 'true' }}{% endraw %}
        with:
          namespace: {% raw %}${{ env.NAMESPACE }}{% endraw %}

      - name: Enable tutor plugin - Credentials
        uses: openedx-actions/tutor-plugin-enable-credentials@{{ cookiecutter.ci_openedx_actions_tutor_plugin_enable_credentials_version }}
        if: {% raw %}${{ env.ENABLE_CREDENTIALS == 'true' }}{% endraw %}
        with:
          version: {{ cookiecutter.ci_deploy_tutor_plugin_credentials_version }}
          namespace: {% raw %}${{ env.NAMESPACE }}{% endraw %}
          aws-ecr-uri: ${AWS_ECR_REPOSITORY_CREDENTIALS}
          common-logo-url: {{ cookiecutter.global_platform_logo_url }}

      - name: Enable tutor plugin - Xqueue
        uses: openedx-actions/tutor-plugin-enable-xqueue@{{ cookiecutter.ci_openedx_actions_tutor_plugin_enable_xqueue_version }}
        if: {% raw %}${{ env.ENABLE_XQUEUE == 'true' }}{% endraw %}
        with:
          namespace: {% raw %}${{ env.NAMESPACE }}{% endraw %}
          tutor-xqueue-version: latest

      - name: Enable tutor plugin - Notes
        uses: openedx-actions/tutor-plugin-enable-notes@{{ cookiecutter.ci_openedx_actions_tutor_plugin_enable_notes_version }}
        if: {% raw %}${{ env.ENABLE_NOTES == 'true' }}{% endraw %}
        with:
          namespace: {% raw %}${{ env.NAMESPACE }}{% endraw %}

      - name: Enable tutor plugin - Ecommerce
        uses: openedx-actions/tutor-plugin-enable-ecommerce@{{ cookiecutter.ci_openedx_actions_tutor_plugin_enable_ecommerce_version }}
        if: {% raw %}${{ env.ENABLE_ECOMMERCE == 'true' }}{% endraw %}
        with:
          namespace: {% raw %}${{ env.NAMESPACE }}{% endraw %}
          tutor-ecommerce-version: latest
          secrets-s3-bucket-name: {% raw %}${{ env.S3_BUCKET_PREFIX }}{% endraw %}-secrets
          currency: USD
          enabled-payment-processors: '["stripe", "paypal"]'

      # -----------------------------------------------------------------------
      # NOTE: the major version of tutor-forum must be consistent with
      #       the version of tutor that is managing the overall installation.
      #       for example: if you've installed tutor v14.2.3 then you should
      #       install tutor-forum v14.0.0
      #
      #       refer to https://pypi.org/project/tutor-forum/#history
      #       for a list of available versions.
      # -----------------------------------------------------------------------
      - name: Enable tutor plugin - Forum
        uses: openedx-actions/tutor-plugin-enable-forum@{{ cookiecutter.ci_openedx_actions_tutor_plugin_enable_forum_version }}
        if: {% raw %}${{ env.ENABLE_FORUM == 'true' }}{% endraw %}

      - name: Enable tutor plugin - License Manager
        uses: openedx-actions/tutor-enable-plugin-license-manager@{{ cookiecutter.ci_openedx_actions_tutor_plugin_enable_license_manager_version }}
        if: {% raw %}${{ env.ENABLE_LICENSE_MANAGER == 'true' }}{% endraw %}
        with:
          namespace: {% raw %}${{ env.NAMESPACE }}{% endraw %}
          aws-ecr-uri: ${AWS_ECR_REPOSITORY_LICENSE_MANAGER}
          host: subscriptions.{{ cookiecutter.environment_subdomain }}.{{ cookiecutter.global_root_domain }}
          lms_host: {{ cookiecutter.environment_subdomain }}.{{ cookiecutter.global_root_domain }}

      # ***********************************************************************
      # Configure backend services
      # ***********************************************************************
      - name: Configure Redis
        uses: openedx-actions/tutor-k8s-configure-redis@{{ cookiecutter.ci_openedx_actions_tutor_k8s_configure_redis_version }}
        with:
          namespace: {% raw %}${{ env.NAMESPACE }}{% endraw %}

      - name: Configure MySQL
        uses: openedx-actions/tutor-k8s-configure-mysql@{{ cookiecutter.ci_openedx_actions_tutor_k8s_configure_mysql_version }}
        with:
          namespace: {% raw %}${{ env.NAMESPACE }}{% endraw %}

      - name: Configure MongoDB
        uses: openedx-actions/tutor-k8s-configure-mongodb@{{ cookiecutter.ci_openedx_actions_tutor_k8s_configure_mongodb_version }}
        with:
          namespace: {% raw %}${{ env.NAMESPACE }}{% endraw %}
          {% if cookiecutter.stack_add_remote_mongodb == "Y" -%}
          remote-server: "true"
          {% elif cookiecutter.stack_add_remote_mongodb == "N" -%}
          remote-server: "false"
          {% endif %}

      - name: Configure AWS SES
        if: {% raw %}${{ env.ENABLE_SMTP == 'true' }}{% endraw %}
        uses: openedx-actions/tutor-k8s-configure-ses@{{ cookiecutter.ci_openedx_actions_tutor_k8s_configure_ses_version }}
        with:
          namespace: {% raw %}${{ env.NAMESPACE }}{% endraw %}

      # ---------------------------------------------------------------------------------
      # Configure application secrets
      # ---------------------------------------------------------------------------------
      - name: Fetch JWT token
        uses: openedx-actions/tutor-k8s-configure-jwt@{{ cookiecutter.ci_openedx_actions_tutor_k8s_configure_jwt_version }}
        with:
          namespace: {% raw %}${{ env.NAMESPACE }}{% endraw %}


      # see: https://github.com/{{ cookiecutter.github_account_name }}/openedx_devops/blob/main/terraform/modules/kubernetes_secrets/main.tf
      - name: Configure edx secret
        uses: openedx-actions/tutor-k8s-configure-edx-secret@{{ cookiecutter.ci_openedx_actions_tutor_k8s_configure_edx_secret_version }}
        with:
          namespace: {% raw %}${{ env.NAMESPACE }}{% endraw %}

      # -----------------------------------------------------------------------
      # ENABLE_WEB_PROXY=false: to disable Caddy
      # RUN_CADDY=false:
      # ENABLE_HTTPS=true: to set HTTPS='on' in production.py
      # -----------------------------------------------------------------------
      - name: Disable Caddy web proxy service
        shell: bash
        run:  |-
          tutor config save --set ENABLE_WEB_PROXY=false \
                            --set ENABLE_HTTPS=true \
                            --set RUN_CADDY=false

      # ---------------------------------------------------------------------------------
      # install and enable tutor plugin https://github.com/lpm0073/tutor-contrib-k8s-deploy-tasks
      # this resolves any problems that cannot be address by directly manipulating tutor's
      # config.yml and/or the resources that it generates in its lms and cms working folders.
      #
      # this includes the following:
      # ----------------------------
      # 1. oauth misconfiguration. tutor relies on an environment variable ENABLE_HTTPS to determine the protocol of the
      # production oauth client for applications that rely on the LMS oauth service. For Kubernetes installations however,
      # this value needs to be set to false which results in ./manage.py lms create_dot_application misconfiguring the oauth
      # client for some, but not all, of these oauth clients. This plugin reconfigures the oauth clients of cms,
      # discovery, ecommerce and credentials to use https protocol for redirect URI.

      # 2. Nutmeg upgrade and initializataion tasks There are a few manage.py tasks that need to run for platforms that are
      # upgrading to Nutmeg or newer from Maple or older. This plugin runs those tasks for you. For more information see
      # Open edX Nutmeg Release.

      # 3. Missing user profile records. User accounts created with manage.py lack a corresponding auth_userprofile record,
      # which causes a 500 exception during login for that account. Adds a blank record in cases where a record is missing.

      # 4. MFE misconfiguration. tutor-mfe relies on the value of ENABLE_HTTPS when generating the dict MFE_CONFIG,
      # which in the case of k8s deployments will result in the browser blocking content due to "Mixed content".
      # This plugin overrides the results of tutor-mfe openedx-lms-production-settings, replacing protocol produced
      # by logic relying on ENABLE_HTTPS (assumed to result in 'http') with the hard-coded value 'https'.
      #
      # 5. Xblock storage configuration. creates a custom storage configuration like the following
      #      S3Boto3Storage(
      #        bucket=AWS_STORAGE_BUCKET_NAME,
      #        access_key=AWS_ACCESS_KEY_ID,
      #        secret_key=AWS_SECRET_ACCESS_KEY,
      #        querystring_expire=86400,
      #        custom_domain=f"{domain}/scorm-proxy"
      #      )
      # ---------------------------------------------------------------------------------
      - name: Add tutor k8s-specific deployment tasks
        uses: openedx-actions/tutor-plugin-enable-k8s-deploy-tasks@v1
        with:
          tutor-plugin-version: "17.0.0"

      - name: Dump tutor config
        uses: openedx-actions/tutor-print-dump@{{ cookiecutter.ci_openedx_actions_tutor_print_dump }}
        with:
          namespace: {% raw %}${{ env.NAMESPACE }}{% endraw %}
          action: deploy

      # -----------------------------------------------------------------------
      # Deploy
      # -----------------------------------------------------------------------
      - name: Deploy to Kubernetes
        uses: ./.github/actions/tutor/k8s/deploy
        with:
          environment-id: {% raw %}${{ env.ENVIRONMENT_ID }}{% endraw %}
          namespace: {% raw %}${{ env.NAMESPACE }}{% endraw %}

      - name: Set theme
        uses: openedx-actions/tutor-k8s-configure-edx-set-theme@{{ cookiecutter.ci_openedx_actions_tutor_k8s_configure_edx_set_theme }}
        with:
          theme-name: {{ cookiecutter.ci_build_theme_repository }}

      - name: Create admin user
        uses: openedx-actions/tutor-k8s-configure-edx-admin@{{ cookiecutter.ci_openedx_actions_tutor_k8s_configure_edx_admin }}
        with:
          namespace: {% raw %}${{ env.NAMESPACE }}{% endraw %}
